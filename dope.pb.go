// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dope.proto

package super

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Dope struct {
	// standard record values
	RecordInfo *RecordInfo `protobuf:"bytes,1,opt,name=record_info,json=recordInfo,proto3" json:"record_info,omitempty"`
	// unique identifier
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	// super dope field 1
	Dope_1 string `protobuf:"bytes,3,opt,name=dope_1,json=dope1,proto3" json:"dope_1,omitempty"`
	// super dope field 2
	Dope_2 int32 `protobuf:"varint,4,opt,name=dope_2,json=dope2,proto3" json:"dope_2,omitempty"`
	// super dope field 3
	Dope_3 []string `protobuf:"bytes,5,rep,name=dope_3,json=dope3,proto3" json:"dope_3,omitempty"`
	// super dope field 4
	Dope_4               bool     `protobuf:"varint,6,opt,name=dope_4,json=dope4,proto3" json:"dope_4,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dope) Reset()         { *m = Dope{} }
func (m *Dope) String() string { return proto.CompactTextString(m) }
func (*Dope) ProtoMessage()    {}
func (*Dope) Descriptor() ([]byte, []int) {
	return fileDescriptor_7cd3618b59d2a578, []int{0}
}

func (m *Dope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dope.Unmarshal(m, b)
}
func (m *Dope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dope.Marshal(b, m, deterministic)
}
func (m *Dope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dope.Merge(m, src)
}
func (m *Dope) XXX_Size() int {
	return xxx_messageInfo_Dope.Size(m)
}
func (m *Dope) XXX_DiscardUnknown() {
	xxx_messageInfo_Dope.DiscardUnknown(m)
}

var xxx_messageInfo_Dope proto.InternalMessageInfo

func (m *Dope) GetRecordInfo() *RecordInfo {
	if m != nil {
		return m.RecordInfo
	}
	return nil
}

func (m *Dope) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Dope) GetDope_1() string {
	if m != nil {
		return m.Dope_1
	}
	return ""
}

func (m *Dope) GetDope_2() int32 {
	if m != nil {
		return m.Dope_2
	}
	return 0
}

func (m *Dope) GetDope_3() []string {
	if m != nil {
		return m.Dope_3
	}
	return nil
}

func (m *Dope) GetDope_4() bool {
	if m != nil {
		return m.Dope_4
	}
	return false
}

func init() {
	proto.RegisterType((*Dope)(nil), "super.Dope")
}

func init() { proto.RegisterFile("dope.proto", fileDescriptor_7cd3618b59d2a578) }

var fileDescriptor_7cd3618b59d2a578 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0xc9, 0xb6, 0x59, 0xec, 0x54, 0x04, 0x03, 0x85, 0x20, 0x1e, 0x82, 0xa7, 0x9c, 0x52,
	0x9a, 0xed, 0x2f, 0x58, 0xbc, 0x78, 0x2b, 0x7b, 0xf4, 0x52, 0xe8, 0x26, 0xd5, 0xe0, 0x76, 0x27,
	0xc4, 0xec, 0x5f, 0xf2, 0x77, 0x4a, 0x12, 0x0c, 0xde, 0x66, 0xbe, 0xf7, 0x86, 0x79, 0x0f, 0xc0,
	0xa0, 0xb7, 0xca, 0x07, 0x8c, 0xc8, 0xe8, 0xf7, 0xe2, 0x6d, 0x78, 0xba, 0x0f, 0x76, 0xc4, 0x60,
	0x0a, 0x7c, 0xf9, 0x21, 0xb0, 0x7e, 0x45, 0x6f, 0x99, 0x86, 0x6d, 0x11, 0xce, 0x6e, 0xbe, 0x22,
	0x27, 0x82, 0xc8, 0xad, 0x7e, 0x54, 0xf9, 0x46, 0x0d, 0x59, 0x79, 0x9b, 0xaf, 0x38, 0x40, 0xa8,
	0x33, 0x7b, 0x80, 0xc6, 0x19, 0xde, 0x08, 0x22, 0x37, 0x43, 0xe3, 0x0c, 0xdb, 0x41, 0x9b, 0xfe,
	0x9d, 0x0f, 0x7c, 0x95, 0x19, 0x4d, 0xdb, 0xa1, 0x62, 0xcd, 0xd7, 0x82, 0x48, 0x5a, 0xb0, 0xae,
	0xb8, 0xe3, 0x54, 0xac, 0xfe, 0xdc, 0x5d, 0xc5, 0x47, 0xde, 0x0a, 0x22, 0xef, 0x0a, 0x3e, 0xf6,
	0x3d, 0xec, 0x46, 0xbc, 0x29, 0x3b, 0x4d, 0x0e, 0x63, 0xf4, 0x38, 0x7d, 0x95, 0x6c, 0xfd, 0x26,
	0xc5, 0x3f, 0xa5, 0x32, 0x27, 0xf2, 0xfe, 0xfc, 0xe1, 0xe2, 0xe7, 0x72, 0x51, 0x23, 0xde, 0xf6,
	0xff, 0xac, 0xfb, 0x6c, 0xbd, 0xb4, 0xb9, 0x73, 0xf7, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x2e, 0xd0,
	0xe2, 0xd6, 0x16, 0x01, 0x00, 0x00,
}
